"""
app.py - Bharat Connect Language-First UI
==========================================
Complete multilingual interface supporting 10 Indian languages

Supported Languages:
- Hindi, English, Telugu, Tamil, Marathi
- Gujarati, Kannada, Malayalam, Bengali, Punjabi

Author: Bharat Connect Team
Date: 2025-10-25
"""

import streamlit as st
from agents.bharat_agent import BharatConnectAgent
import os
from google.oauth2 import service_account  # ADD THIS
import vertexai  # ADD THIS

# ============================================================================
# GOOGLE CLOUD CREDENTIALS SETUP (FOR STREAMLIT CLOUD)
# ============================================================================

def init_google_cloud():
    """Initialize Google Cloud credentials for both local and cloud deployment"""
    
    if hasattr(st, 'secrets') and 'gcp_service_account' in st.secrets:
        # Running on Streamlit Cloud - use secrets
        print("тЬЕ Using Streamlit Cloud secrets")
        
        os.environ['GCP_PROJECT_ID'] = st.secrets["GCP_PROJECT_ID"]
        os.environ['GCP_LOCATION'] = st.secrets["GCP_LOCATION"]
        
        credentials = service_account.Credentials.from_service_account_info(
            dict(st.secrets["gcp_service_account"]),
            scopes=[
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/bigquery"
            ]
        )
        
        vertexai.init(
            project=st.secrets["GCP_PROJECT_ID"],
            location=st.secrets["GCP_LOCATION"],
            credentials=credentials
        )
        
        return credentials
    else:
        # Running locally
        print("тЬЕ Using local .env file")
        from dotenv import load_dotenv
        load_dotenv()
        return None

# Initialize on app start
init_google_cloud()

# ============================================================================
# PAGE CONFIGURATION
# ============================================================================

st.set_page_config(
    page_title="Bharat Connect | рднрд╛рд░рдд рдХрдиреЗрдХреНрдЯ",
    page_icon="ЁЯЗоЁЯЗ│",
    layout="wide",
    initial_sidebar_state="collapsed"
)

# ============================================================================
# COMPLETE LANGUAGE CONFIGURATION (10 Languages)
# ============================================================================

LANGUAGES = {
    'hi': {
        'name': 'Hindi',
        'native': 'рд╣рд┐рдВрджреА',
        'greeting': 'рдирдорд╕реНрддреЗ! рдЖрдк рдХреНрдпрд╛ рдЦреЛрдЬ рд░рд╣реЗ рд╣реИрдВ?',
        'search_placeholder': 'рдпрд╣рд╛рдВ рдЦреЛрдЬреЗрдВ...',
        'search_button': 'рдЦреЛрдЬреЗрдВ',
        'results_title': 'рдкрд░рд┐рдгрд╛рдо',
        'original_language': 'рдореВрд▓ рднрд╛рд╖рд╛',
        'translated_note': '(рдЕрдиреБрд╡рд╛рджрд┐рдд)',
        'no_results': 'рдХреЛрдИ рдкрд░рд┐рдгрд╛рдо рдирд╣реАрдВ рдорд┐рд▓рд╛',
        'news': 'рд╕рдорд╛рдЪрд╛рд░',
        'education': 'рд╢рд┐рдХреНрд╖рд╛',
        'change_language': 'рднрд╛рд╖рд╛ рдмрджрд▓реЗрдВ',
        'searching': 'рдЦреЛрдЬ рд░рд╣реЗ рд╣реИрдВ...',
        'color': '#FF9933'
    },
    'en': {
        'name': 'English',
        'native': 'English',
        'greeting': 'Hello! What are you looking for?',
        'search_placeholder': 'Search here...',
        'search_button': 'Search',
        'results_title': 'Results',
        'original_language': 'Original Language',
        'translated_note': '(Translated)',
        'no_results': 'No results found',
        'news': 'News',
        'education': 'Education',
        'change_language': 'Change Language',
        'searching': 'Searching...',
        'color': '#FFFFFF'
    },
    'te': {
        'name': 'Telugu',
        'native': 'р░др▒Жр░▓р▒Бр░Чр▒Б',
        'greeting': 'р░ир░ор░╕р▒Нр░Хр░╛р░░р░В! р░ор▒Ар░░р▒Б р░Пр░ор░┐ р░╡р▒Жр░др▒Бр░Хр▒Бр░др▒Бр░ир▒Нр░ир░╛р░░р▒Б?',
        'search_placeholder': 'р░Зр░Хр▒Нр░Хр░б р░╡р▒Жр░др░Хр░Вр░бр░┐...',
        'search_button': 'р░╡р▒Жр░др░Хр░Вр░бр░┐',
        'results_title': 'р░лр░▓р░┐р░др░╛р░▓р▒Б',
        'original_language': 'р░Ер░╕р░▓р▒Б р░нр░╛р░╖',
        'translated_note': '(р░Ер░ир▒Бр░╡р░жр░┐р░Вр░Ър░мр░бр░┐р░Вр░жр░┐)',
        'no_results': 'р░лр░▓р░┐р░др░╛р░▓р▒Б р░Хр░ир▒Бр░Чр▒Кр░ир░мр░бр░▓р▒Зр░жр▒Б',
        'news': 'р░╡р░╛р░░р▒Нр░др░▓р▒Б',
        'education': 'р░╡р░┐р░жр▒Нр░п',
        'change_language': 'р░нр░╛р░╖р░ир▒Б р░ор░╛р░░р▒Нр░Ър░Вр░бр░┐',
        'searching': 'р░╡р▒Жр░др▒Бр░Хр▒Бр░др▒Лр░Вр░жр░┐...',
        'color': '#138808'
    },
    'ta': {
        'name': 'Tamil',
        'native': 'родрооро┐ро┤рпН',
        'greeting': 'ро╡рогроХрпНроХроорпН! роирпАроЩрпНроХро│рпН роОродрпИродрпН родрпЗроЯрпБроХро┐ро▒рпАро░рпНроХро│рпН?',
        'search_placeholder': 'роЗроЩрпНроХрпЗ родрпЗроЯрпБроЩрпНроХро│рпН...',
        'search_button': 'родрпЗроЯрпБ',
        'results_title': 'роорпБроЯро┐ро╡рпБроХро│рпН',
        'original_language': 'роЕроЪро▓рпН роорпКро┤ро┐',
        'translated_note': '(роорпКро┤ро┐рокрпЖропро░рпНроХрпНроХрокрпНрокроЯрпНроЯродрпБ)',
        'no_results': 'роорпБроЯро┐ро╡рпБроХро│рпН роЗро▓рпНро▓рпИ',
        'news': 'роЪрпЖропрпНродро┐роХро│рпН',
        'education': 'роХро▓рпНро╡ро┐',
        'change_language': 'роорпКро┤ро┐ропрпИ рооро╛ро▒рпНро▒рпБ',
        'searching': 'родрпЗроЯрпБроХро┐ро▒родрпБ...',
        'color': '#FF9933'
    },
    'mr': {
        'name': 'Marathi',
        'native': 'рдорд░рд╛рдареА',
        'greeting': 'рдирдорд╕реНрдХрд╛рд░! рддреБрдореНрд╣реА рдХрд╛рдп рд╢реЛрдзрдд рдЖрд╣рд╛рдд?',
        'search_placeholder': 'рдпреЗрдереЗ рд╢реЛрдзрд╛...',
        'search_button': 'рд╢реЛрдзрд╛',
        'results_title': 'рдкрд░рд┐рдгрд╛рдо',
        'original_language': 'рдореВрд│ рднрд╛рд╖рд╛',
        'translated_note': '(рднрд╛рд╖рд╛рдВрддрд░рд┐рдд)',
        'no_results': 'рдкрд░рд┐рдгрд╛рдо рд╕рд╛рдкрдбрд▓реЗ рдирд╛рд╣реАрдд',
        'news': 'рдмрд╛рддрдореНрдпрд╛',
        'education': 'рд╢рд┐рдХреНрд╖рдг',
        'change_language': 'рднрд╛рд╖рд╛ рдмрджрд▓рд╛',
        'searching': 'рд╢реЛрдзрдд рдЖрд╣реЗ...',
        'color': '#138808'
    },
    'gu': {
        'name': 'Gujarati',
        'native': 'ркЧрлБркЬрк░рк╛ркдрлА',
        'greeting': 'ркиркорк╕рлНркдрлЗ! ркдркорлЗ рк╢рлБркВ рк╢рлЛркзрлА рк░рк╣рлНркпрк╛ ркЫрлЛ?',
        'search_placeholder': 'ркЕрк╣рлАркВ рк╢рлЛркзрлЛ...',
        'search_button': 'рк╢рлЛркзрлЛ',
        'results_title': 'рккрк░рк┐ркгрк╛ркорлЛ',
        'original_language': 'ркорлВрк│ ркнрк╛рк╖рк╛',
        'translated_note': '(ркЕркирлБрк╡рк╛ркжрк┐ркд)',
        'no_results': 'ркХрлЛркИ рккрк░рк┐ркгрк╛рко ркорк│рлНркпрк╛ркВ ркиркерлА',
        'news': 'рк╕ркорк╛ркЪрк╛рк░',
        'education': 'рк╢рк┐ркХрлНрк╖ркг',
        'change_language': 'ркнрк╛рк╖рк╛ ркмркжрк▓рлЛ',
        'searching': 'рк╢рлЛркзрлА рк░рк╣рлНркпрлБркВ ркЫрлЗ...',
        'color': '#FF9933'
    },
    'kn': {
        'name': 'Kannada',
        'native': 'р▓Хр▓ир│Нр▓ир▓б',
        'greeting': 'р▓ир▓ор▓╕р│Нр▓Хр▓╛р▓░! р▓ир│Ар▓╡р│Б р▓Пр▓ир│Б р▓╣р│Бр▓бр│Бр▓Хр│Бр▓др│Нр▓др▓┐р▓жр│Нр▓жр│Ар▓░р▓┐?',
        'search_placeholder': 'р▓Зр▓▓р│Нр▓▓р▓┐ р▓╣р│Бр▓бр│Бр▓Хр▓┐...',
        'search_button': 'р▓╣р│Бр▓бр│Бр▓Хр▓┐',
        'results_title': 'р▓лр▓▓р▓┐р▓др▓╛р▓Вр▓╢р▓Чр▓│р│Б',
        'original_language': 'р▓ор│Вр▓▓ р▓нр▓╛р▓╖р│Ж',
        'translated_note': '(р▓Ер▓ир│Бр▓╡р▓╛р▓жр▓┐р▓╕р▓▓р▓╛р▓Чр▓┐р▓жр│Ж)',
        'no_results': 'р▓лр▓▓р▓┐р▓др▓╛р▓Вр▓╢р▓Чр▓│р│Б р▓Хр▓Вр▓бр│Бр▓мр▓Вр▓жр▓┐р▓▓р│Нр▓▓',
        'news': 'р▓╕р│Бр▓жр│Нр▓жр▓┐',
        'education': 'р▓╢р▓┐р▓Хр│Нр▓╖р▓г',
        'change_language': 'р▓нр▓╛р▓╖р│Ж р▓мр▓жр▓▓р▓╛р▓пр▓┐р▓╕р▓┐',
        'searching': 'р▓╣р│Бр▓бр│Бр▓Хр▓▓р▓╛р▓Чр│Бр▓др│Нр▓др▓┐р▓жр│Ж...',
        'color': '#138808'
    },
    'ml': {
        'name': 'Malayalam',
        'native': 'р┤ор┤▓р┤пр┤╛р┤│р┤В',
        'greeting': 'р┤ир┤ор┤╕р╡Нр┤Хр┤╛р┤░р┤В! р┤ир┤┐р┤Щр╡Нр┤Щр╡╛ р┤Ор┤ир╡Нр┤др┤╛р┤гр╡Н р┤др┤┐р┤░р┤пр╡Бр┤ир╡Нр┤ир┤др╡Н?',
        'search_placeholder': 'р┤Зр┤╡р┤┐р┤Яр╡Ж р┤др┤┐р┤░р┤пр╡Бр┤Х...',
        'search_button': 'р┤др┤┐р┤░р┤пр╡Бр┤Х',
        'results_title': 'р┤лр┤▓р┤Щр╡Нр┤Щр╡╛',
        'original_language': 'р┤пр┤ер┤╛р╡╝р┤др╡Нр┤е р┤нр┤╛р┤╖',
        'translated_note': '(р┤кр┤░р┤┐р┤нр┤╛р┤╖р┤кр╡Нр┤кр╡Жр┤Яр╡Бр┤др╡Нр┤др┤┐р┤пр┤др╡Н)',
        'no_results': 'р┤лр┤▓р┤Щр╡Нр┤Щр┤│р╡Кр┤ир╡Нр┤ир╡Бр┤В р┤Хр┤гр╡Нр┤Яр╡Жр┤др╡Нр┤др┤┐р┤пр┤┐р┤▓р╡Нр┤▓',
        'news': 'р┤╡р┤╛р╡╝р┤др╡Нр┤др┤Хр╡╛',
        'education': 'р┤╡р┤┐р┤жр╡Нр┤пр┤╛р┤нр╡Нр┤пр┤╛р┤╕р┤В',
        'change_language': 'р┤нр┤╛р┤╖ р┤ор┤╛р┤▒р╡Нр┤▒р╡Бр┤Х',
        'searching': 'р┤др┤┐р┤░р┤пр╡Бр┤ир╡Нр┤ир╡Б...',
        'color': '#FF9933'
    },
    'bn': {
        'name': 'Bengali',
        'native': 'ржмрж╛ржВрж▓рж╛',
        'greeting': 'ржиржорж╕рзНржХрж╛рж░! ржЖржкржирж┐ ржХрзА ржЦрзБржБржЬржЫрзЗржи?',
        'search_placeholder': 'ржПржЦрж╛ржирзЗ ржЦрзБржБржЬрзБржи...',
        'search_button': 'ржЦрзБржБржЬрзБржи',
        'results_title': 'ржлрж▓рж╛ржлрж▓',
        'original_language': 'ржорзВрж▓ ржнрж╛рж╖рж╛',
        'translated_note': '(ржЕржирзБржмрж╛ржж ржХрж░рж╛)',
        'no_results': 'ржХрзЛржи ржлрж▓рж╛ржлрж▓ ржкрж╛ржУржпрж╝рж╛ ржпрж╛ржпрж╝ржирж┐',
        'news': 'ржЦржмрж░',
        'education': 'рж╢рж┐ржХрзНрж╖рж╛',
        'change_language': 'ржнрж╛рж╖рж╛ ржкрж░рж┐ржмрж░рзНрждржи ржХрж░рзБржи',
        'searching': 'ржЦрзБржБржЬржЫрж┐...',
        'color': '#138808'
    },
    'pa': {
        'name': 'Punjabi',
        'native': 'рикрй░риЬри╛римрйА',
        'greeting': 'ри╕рид ри╕рйНри░рйА риЕриХри╛ри▓! ридрйБри╕рйАриВ риХрйА риЦрйЛриЬ ри░ри╣рйЗ ри╣рйЛ?',
        'search_placeholder': 'риЗрй▒риерйЗ риЦрйЛриЬрйЛ...',
        'search_button': 'риЦрйЛриЬрйЛ',
        'results_title': 'рииридрйАриЬрйЗ',
        'original_language': 'риЕри╕ри▓ ринри╛ри╕ри╝ри╛',
        'translated_note': '(риЕриирйБри╡ри╛риж риХрйАридри╛)',
        'no_results': 'риХрйЛриИ рииридрйАриЬрйЗ риири╣рйАриВ риори┐ри▓рйЗ',
        'news': 'риЦри╝римри░ри╛риВ',
        'education': 'ри╕ри┐рй▒риЦри┐риЖ',
        'change_language': 'ринри╛ри╕ри╝ри╛ римрижри▓рйЛ',
        'searching': 'риЦрйЛриЬ ри░ри┐ри╣ри╛ ри╣рйИ...',
        'color': '#FF9933'
    }
}

# ============================================================================
# CUSTOM CSS
# ============================================================================

st.markdown("""
<style>
    /* Hide Streamlit branding */
    #MainMenu {visibility: hidden;}
    footer {visibility: hidden;}
    
    /* Result card styling */
    .result-card {
        background: white;
        border-radius: 12px;
        padding: 20px;
        margin: 15px 0;
        box-shadow: 0 2px 8px rgba(0,0,0,0.1);
        border-left: 4px solid #FF9933;
        transition: transform 0.2s ease;
    }
    
    .result-card:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(0,0,0,0.15);
    }
    
    /* Translation badge */
    .translated-badge {
        background: linear-gradient(90deg, #FFF3CD, #FFF8E1);
        padding: 6px 12px;
        border-radius: 6px;
        font-size: 12px;
        color: #856404;
        display: inline-block;
        margin-bottom: 10px;
        border: 1px solid #FFE69C;
    }
    
    /* Language button styling */
    .stButton > button {
        font-size: 24px;
        font-weight: bold;
        padding: 20px;
        border-radius: 10px;
        transition: all 0.3s ease;
    }
    
    .stButton > button:hover {
        transform: scale(1.05);
        box-shadow: 0 6px 20px rgba(0,0,0,0.2);
    }
</style>
""", unsafe_allow_html=True)

# ============================================================================
# SESSION STATE
# ============================================================================

if 'selected_language' not in st.session_state:
    st.session_state.selected_language = None

if 'agent' not in st.session_state:
    st.session_state.agent = None

# ============================================================================
# LANGUAGE SELECTION PAGE
# ============================================================================

def language_selection_page():
    """Beautiful landing page with all 10 language options."""
    
    st.markdown("""
    <div style="text-align: center; padding: 40px 0;">
        <h1 style="font-size: 52px; margin-bottom: 10px;">ЁЯЗоЁЯЗ│ рднрд╛рд░рдд рдХрдиреЗрдХреНрдЯ</h1>
        <h2 style="font-size: 36px; color: #666; margin-bottom: 20px;">Bharat Connect</h2>
        <p style="font-size: 20px; color: #888; margin-bottom: 50px;">
            Bridging India's Digital Language Divide
        </p>
        <p style="font-size: 18px; color: #999;">
            Choose your language | рдЕрдкрдиреА рднрд╛рд╖рд╛ рдЪреБрдиреЗрдВ | р░ор▒А р░нр░╛р░╖р░ир▒Б р░Ор░Вр░Ър▒Бр░Хр▒Лр░Вр░бр░┐
        </p>
    </div>
    """, unsafe_allow_html=True)
    
    st.markdown("<h3 style='text-align: center; color: #666; margin: 30px 0;'>Select Your Language</h3>", unsafe_allow_html=True)
    
    # Create 2 rows of 5 languages each
    row1 = list(LANGUAGES.items())[:5]
    row2 = list(LANGUAGES.items())[5:]
    
    # Row 1
    cols1 = st.columns(5)
    for idx, (lang_code, lang_data) in enumerate(row1):
        with cols1[idx]:
            if st.button(
                lang_data['native'],
                key=f"lang_{lang_code}",
                use_container_width=True,
                type="primary" if lang_code == 'en' else "secondary"
            ):
                st.session_state.selected_language = lang_code
                st.rerun()
    
    # Row 2
    cols2 = st.columns(5)
    for idx, (lang_code, lang_data) in enumerate(row2):
        with cols2[idx]:
            if st.button(
                lang_data['native'],
                key=f"lang_{lang_code}",
                use_container_width=True,
                type="secondary"
            ):
                st.session_state.selected_language = lang_code
                st.rerun()
    
    st.markdown("""
    <div style="text-align: center; margin-top: 80px;">
        <h3 style="color: #666; margin-bottom: 20px;">What Makes Us Special</h3>
        <div style="display: flex; justify-content: center; gap: 40px; flex-wrap: wrap; max-width: 1000px; margin: 0 auto;">
            <div style="text-align: center; flex: 1; min-width: 200px;">
                <h2 style="color: #FF9933; margin-bottom: 10px;">10</h2>
                <p style="color: #888;">Indian Languages</p>
            </div>
            <div style="text-align: center; flex: 1; min-width: 200px;">
                <h2 style="color: #138808; margin-bottom: 10px;">1000+</h2>
                <p style="color: #888;">Content Sources</p>
            </div>
            <div style="text-align: center; flex: 1; min-width: 200px;">
                <h2 style="color: #FF9933; margin-bottom: 10px;">AI</h2>
                <p style="color: #888;">Powered Translation</p>
            </div>
        </div>
    </div>
    """, unsafe_allow_html=True)
    
    st.markdown("""
    <div style="text-align: center; margin-top: 60px; color: #999; font-size: 14px;">
        <p>Built for Google Cloud AI Hackathon 2025</p>
        <p>Powered by Vertex AI тАв Fivetran тАв BigQuery</p>
    </div>
    """, unsafe_allow_html=True)

# ============================================================================
# MAIN APPLICATION PAGE
# ============================================================================

def main_app_page(lang_code):
    """Main application interface in selected language."""
    
    lang = LANGUAGES[lang_code]
    
    # Initialize agent if needed
    if st.session_state.agent is None:
        with st.spinner(f"{lang['searching']}"):
            PROJECT_ID = os.getenv('GCP_PROJECT_ID', 'bharat-connect-000')
            LOCATION = os.getenv('GCP_LOCATION', 'us-central1')
            st.session_state.agent = BharatConnectAgent(
                project_id=PROJECT_ID,
                location=LOCATION,
                user_language=lang['name']
            )
    
    agent = st.session_state.agent
    
    # Header
    col1, col2 = st.columns([5, 1])
    with col1:
        st.markdown(f"# ЁЯЗоЁЯЗ│ {lang['native']}")
        st.markdown(f"*{lang['greeting']}*")
    with col2:
        if st.button(f"{lang['change_language']}", key="change_lang"):
            st.session_state.selected_language = None
            st.session_state.agent = None
            st.rerun()
    
    st.divider()
    
    # Search interface
    col1, col2 = st.columns([4, 1])
    
    with col1:
        query = st.text_input(
            "Search",
            placeholder=lang['search_placeholder'],
            label_visibility="collapsed",
            key="search_input"
        )
    
    with col2:
        search_btn = st.button(
            f"{lang['search_button']}",
            type="primary",
            use_container_width=True,
            key="search_btn"
        )
    
    # Search execution
    if search_btn and query:
        with st.spinner(f"{lang['searching']}"):
            response = agent.process_query(query)
        
        if "error" in response:
            st.error(f"{response['error']}")
        
        elif response.get("results"):
            st.success(f"{response['results_count']} {lang['results_title']}")
            
            # Show cross-language note if applicable
            if response.get('cross_language_used'):
                st.info(f"тД╣Results from other languages translated to {lang['native']}")
            
            # Display results
            for idx, result in enumerate(response['results'], 1):
                with st.container():
                    st.markdown(f"### {idx}. {result['title']}")
                    
                    # Show translation badge if content is from different language
                    if result.get('was_translated'):
                        st.markdown(f"""
                        <span class="translated-badge">
                            {lang['original_language']}: {result['original_language']} {lang['translated_note']}
                        </span>
                        """, unsafe_allow_html=True)
                    
                    # Summary
                    st.write(result['summary'])
                    
                    st.divider()
                    
                    # Metadata
                    cols = st.columns(4)
                    with cols[0]:
                        st.caption(f"**Source:** {result['source']}")
                    with cols[1]:
                        content_type_label = lang['news'] if result['content_type'] == 'news' else lang['education']
                        st.caption(f"**Type:** {content_type_label}")
                    with cols[2]:
                        st.caption(f"**Date:** {result['date'][:10]}")
                    with cols[3]:
                        st.markdown(f"[Link]({result['url']})")
                    
                    st.markdown("<br>", unsafe_allow_html=True)
        
        else:
            st.warning(f"{lang['no_results']}")
    
    # Footer
    st.markdown("---")
    st.markdown(f"""
    <div style="text-align: center; color: #666; font-size: 12px;">
        <p>Built for Digital India ЁЯЗоЁЯЗ│ | Google Cloud AI Hackathon 2025</p>
    </div>
    """, unsafe_allow_html=True)

# ============================================================================
# MAIN ROUTER
# ============================================================================

def main():
    """Main application router."""
    
    if st.session_state.selected_language is None:
        language_selection_page()
    else:
        main_app_page(st.session_state.selected_language)

if __name__ == "__main__":
    main()
